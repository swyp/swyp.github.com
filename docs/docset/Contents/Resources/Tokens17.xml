<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/swypConnectionSession.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/swypConnectionSession</TokenIdentifier>
			<Abstract type="html">This class represents and manages the connection between this and one other device.</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>
			
			<NodeRef refid="17"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypConnectionSession/setConnectionStatus:</TokenIdentifier>
			<Abstract type="html">The connection status property contains the current session's state w/ a swypConnectionSessionStatus value.</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) swypConnectionSessionStatus connectionStatus</Declaration>
			
			
			<Anchor>//api/name/connectionStatus</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/swypConnectionSession/connectionStatus</TokenIdentifier>
			<Abstract type="html">The connection status property contains the current session's state w/ a swypConnectionSessionStatus value.</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) swypConnectionSessionStatus connectionStatus</Declaration>
			
			
			<Anchor>//api/name/connectionStatus</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypConnectionSession/setSessionHueColor:</TokenIdentifier>
			<Abstract type="html">The hue of swyp workspace background and connection indicators, proving that you're connected to the appropiate individual.</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) UIColor *sessionHueColor</Declaration>
			
			
			<Anchor>//api/name/sessionHueColor</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/swypConnectionSession/sessionHueColor</TokenIdentifier>
			<Abstract type="html">The hue of swyp workspace background and connection indicators, proving that you're connected to the appropiate individual.</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) UIColor *sessionHueColor</Declaration>
			
			
			<Anchor>//api/name/sessionHueColor</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypConnectionSession/setRepresentedCandidate:</TokenIdentifier>
			<Abstract type="html">The remote candidate that you're communicating with through this connectionSession.</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) swypCandidate *representedCandidate</Declaration>
			
			
			<Anchor>//api/name/representedCandidate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/swypConnectionSession/representedCandidate</TokenIdentifier>
			<Abstract type="html">The remote candidate that you're communicating with through this connectionSession.</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) swypCandidate *representedCandidate</Declaration>
			
			
			<Anchor>//api/name/representedCandidate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypConnectionSession/initWithSwypCandidate:inputStream:outputStream:</TokenIdentifier>
			<Abstract type="html">swypConnectionSessions are initialized with their candidate, and input and an output stream.</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>- (id)initWithSwypCandidate:(swypCandidate *)candidate inputStream:(NSInputStream *)inputStream outputStream:(NSOutputStream *)outputStream</Declaration>
			
			
			<Anchor>//api/name/initWithSwypCandidate:inputStream:outputStream:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypConnectionSession/initiate</TokenIdentifier>
			<Abstract type="html">Start connection; schedule in runloop</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>- (void)initiate</Declaration>
			
			
			<Anchor>//api/name/initiate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypConnectionSession/invalidate</TokenIdentifier>
			<Abstract type="html">Destroy connection; remove from runloop</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>- (void)invalidate</Declaration>
			
			
			<Anchor>//api/name/invalidate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypConnectionSession/addDataDelegate:</TokenIdentifier>
			<Abstract type="html">For adding a swypConnectionSessionDataDelegate.</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>- (void)addDataDelegate:(id&lt;swypConnectionSessionDataDelegate&gt;)delegate</Declaration>
			
			
			<Anchor>//api/name/addDataDelegate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypConnectionSession/removeDataDelegate:</TokenIdentifier>
			<Abstract type="html">For removing a swypConnectionSessionDataDelegate.</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>- (void)removeDataDelegate:(id&lt;swypConnectionSessionDataDelegate&gt;)delegate</Declaration>
			
			
			<Anchor>//api/name/removeDataDelegate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypConnectionSession/addConnectionSessionInfoDelegate:</TokenIdentifier>
			<Abstract type="html">For adding a swypConnectionSessionInfoDelegate.</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>- (void)addConnectionSessionInfoDelegate:(id&lt;swypConnectionSessionInfoDelegate&gt;)delegate</Declaration>
			
			
			<Anchor>//api/name/addConnectionSessionInfoDelegate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypConnectionSession/removeConnectionSessionInfoDelegate:</TokenIdentifier>
			<Abstract type="html">For removing a swypConnectionSessionInfoDelegate.</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>- (void)removeConnectionSessionInfoDelegate:(id&lt;swypConnectionSessionInfoDelegate&gt;)delegate</Declaration>
			
			
			<Anchor>//api/name/removeConnectionSessionInfoDelegate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypConnectionSession/beginSendingFileStreamWithTag:type:dataStreamForSend:length:</TokenIdentifier>
			<Abstract type="html">the length of the 'stream' property
		if length is specified as 0, the stream will be written without a length specifier, to allow devs to do fun stuff
		be aware, some malicious endpoints will try to overload the length of a stream to cause buffer overruns 
			1) Don't rely on length parameter for buffer sizes without validity checks 2) Don't execute recieved data!
	if there is already a stream sending, this stream will be queued</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>- (swypConcatenatedInputStream *)beginSendingFileStreamWithTag:(NSString *)tag type:(NSString *)fileType dataStreamForSend:(NSInputStream *)stream length:(NSUInteger)streamLength</Declaration>
			<Parameters>
				<Parameter>
					<Name>length</Name>
					<Abstract type="html">the length of the 'stream' property
		if length is specified as 0, the stream will be written without a length specifier, to allow devs to do fun stuff
		be aware, some malicious endpoints will try to overload the length of a stream to cause buffer overruns 
			1) Don't rely on length parameter for buffer sizes without validity checks 2) Don't execute recieved data!
	if there is already a stream sending, this stream will be queued</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/beginSendingFileStreamWithTag:type:dataStreamForSend:length:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypConnectionSession/discernedStream:withDiscerner:</TokenIdentifier>
			<Abstract type="html">Notifies that discerned stream is ready for consumption</Abstract>
			<DeclaredIn>swypConnectionSession.m</DeclaredIn>			
			
			<Declaration>- (void)discernedStream:(swypDiscernedInputStream *)discernedStream withDiscerner:(swypInputStreamDiscerner *)discerner</Declaration>
			
			
			<Anchor>//api/name/discernedStream:withDiscerner:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypConnectionSession/concludedDiscernedStream:withDiscerner:</TokenIdentifier>
			<Abstract type="html">Notifies that discerned stream has concluded</Abstract>
			<DeclaredIn>swypConnectionSession.m</DeclaredIn>			
			
			<Declaration>- (void)concludedDiscernedStream:(swypDiscernedInputStream *)discernedStream withDiscerner:(swypInputStreamDiscerner *)discerner</Declaration>
			
			
			<Anchor>//api/name/concludedDiscernedStream:withDiscerner:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypConnectionSession/inputStreamDiscernerFinishedWithError:withDiscerner:</TokenIdentifier>
			<Abstract type="html">Notifies that discerned stream has concluded with an error</Abstract>
			<DeclaredIn>swypConnectionSession.m</DeclaredIn>			
			
			<Declaration>- (void)inputStreamDiscernerFinishedWithError:(NSError *)error withDiscerner:(swypInputStreamDiscerner *)discerner</Declaration>
			
			
			<Anchor>//api/name/inputStreamDiscernerFinishedWithError:withDiscerner:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypConnectionSession/dataBridgeYieldedData:fromInputStream:withInputToDataBridge:</TokenIdentifier>
			<Abstract type="html">Data retrieved notification</Abstract>
			<DeclaredIn>swypConnectionSession.m</DeclaredIn>			
			
			<Declaration>- (void)dataBridgeYieldedData:(NSData *)yieldedData fromInputStream:(NSInputStream *)inputStream withInputToDataBridge:(swypInputToDataBridge *)bridge</Declaration>
			
			
			<Anchor>//api/name/dataBridgeYieldedData:fromInputStream:withInputToDataBridge:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypConnectionSession/dataBridgeFailedYieldingDataFromInputStream:withError:inInputToDataBridge:</TokenIdentifier>
			<Abstract type="html">Data failed notfication... Sorry.</Abstract>
			<DeclaredIn>swypConnectionSession.m</DeclaredIn>			
			
			<Declaration>- (void)dataBridgeFailedYieldingDataFromInputStream:(NSInputStream *)inputStream withError:(NSError *)error inInputToDataBridge:(swypInputToDataBridge *)bridge</Declaration>
			
			
			<Anchor>//api/name/dataBridgeFailedYieldingDataFromInputStream:withError:inInputToDataBridge:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypConnectionSession/encounteredErrorInInputStream:withInputToOutputConnector:</TokenIdentifier>
			<Abstract type="html">error in the input</Abstract>
			<DeclaredIn>swypConnectionSession.m</DeclaredIn>			
			
			<Declaration>- (void)encounteredErrorInInputStream:(NSInputStream *)stream withInputToOutputConnector:(swypInputToOutputStreamConnector *)connector</Declaration>
			
			
			<Anchor>//api/name/encounteredErrorInInputStream:withInputToOutputConnector:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypConnectionSession/encounteredErrorInOutputStream:withInputToOutputConnector:</TokenIdentifier>
			<Abstract type="html">error in the output</Abstract>
			<DeclaredIn>swypConnectionSession.m</DeclaredIn>			
			
			<Declaration>- (void)encounteredErrorInOutputStream:(NSOutputStream *)stream withInputToOutputConnector:(swypInputToOutputStreamConnector *)connector</Declaration>
			
			
			<Anchor>//api/name/encounteredErrorInOutputStream:withInputToOutputConnector:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypConnectionSession/completedInputStream:forOutputStream:withInputToOutputConnector:</TokenIdentifier>
			<Abstract type="html">we're done</Abstract>
			<DeclaredIn>swypConnectionSession.m</DeclaredIn>			
			
			<Declaration>- (void)completedInputStream:(NSInputStream *)stream forOutputStream:(NSOutputStream *)outputStream withInputToOutputConnector:(swypInputToOutputStreamConnector *)connector</Declaration>
			
			
			<Anchor>//api/name/completedInputStream:forOutputStream:withInputToOutputConnector:</Anchor>
		</Token>
		
	</File>
</Tokens>