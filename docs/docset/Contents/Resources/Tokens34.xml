<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/swypSwypableContentSuperview.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/swypSwypableContentSuperview</TokenIdentifier>
			<Abstract type="html">Init with the swypSwypableContentSuperviewWorkspaceDelegate and swypSwypableContentSuperviewDelegate, then insert into a view, adding subviews to it.
Whenever a long press, uninterrupted by cancelled touches or other recognizers, occurs on the view, it asks its swypSwypableContentSuperviewContentDelegate whether it's a swypableContentView, if so it asks what the ID for the content is, then it proceeds to automatically display the swypWorkspaceViewController, forwarding UITouches to the workpace so that one continuous gesture can swyp a content off of the device.</Abstract>
			<DeclaredIn>swypSwypableContentSuperview.h</DeclaredIn>
			
			<NodeRef refid="34"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypSwypableContentSuperview/initWithContentDelegate:workspaceDelegate:frame:</TokenIdentifier>
			<Abstract type="html">Convenience function for init.
@param contentDelegate</Abstract>
			<DeclaredIn>swypSwypableContentSuperview.h</DeclaredIn>			
			
			<Declaration>- (id)initWithContentDelegate:(id&lt;swypSwypableContentSuperviewContentDelegate&gt;)contentDelegate workspaceDelegate:(id&lt;swypSwypableContentSuperviewWorkspaceDelegate&gt;)workspaceDelegate frame:(CGRect)frame</Declaration>
			<Parameters>
				<Parameter>
					<Name>workspaceDelegate</Name>
					<Abstract type="html">always the swypWorkspaceViewController .</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithContentDelegate:workspaceDelegate:frame:</Anchor>
		</Token>
		
	</File>
</Tokens>