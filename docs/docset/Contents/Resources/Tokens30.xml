<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/swypPendingConnectionQueue.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/swypPendingConnectionQueue</TokenIdentifier>
			<Abstract type="html">This class further encapsulates pending connections for the swypPendingConnectionManager.</Abstract>
			<DeclaredIn>swypPendingConnectionQueue.h</DeclaredIn>
			
			<NodeRef refid="30"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypPendingConnectionQueue/setPendingInterfaceMethods:</TokenIdentifier>
			<Abstract type="html">mutableSet set of interface methods supported &amp; not timed-out</Abstract>
			<DeclaredIn>swypPendingConnectionQueue.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSMutableSet *pendingInterfaceMethods</Declaration>
			
			
			<Anchor>//api/name/pendingInterfaceMethods</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/swypPendingConnectionQueue/pendingInterfaceMethods</TokenIdentifier>
			<Abstract type="html">mutableSet set of interface methods supported &amp; not timed-out</Abstract>
			<DeclaredIn>swypPendingConnectionQueue.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSMutableSet *pendingInterfaceMethods</Declaration>
			
			
			<Anchor>//api/name/pendingInterfaceMethods</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypPendingConnectionQueue/initWithInterfaceMethods:</TokenIdentifier>
			<Abstract type="html">Inits with supported interfaces</Abstract>
			<DeclaredIn>swypPendingConnectionQueue.h</DeclaredIn>			
			
			<Declaration>- (id)initWithInterfaceMethods:(NSArray *)supportedInterfaceMethods</Declaration>
			<Parameters>
				<Parameter>
					<Name>supportedInterfaceMethods</Name>
					<Abstract type="html">swypConnectionMethod(s) as NSNumber intergers in NSArray</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithInterfaceMethods:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypPendingConnectionQueue/addInterfaceMethod:</TokenIdentifier>
			<Abstract type="html">adds a supported interface
If you add an interface of higher priority after the emptying of other interfaces, this might cause some undefined behavior...</Abstract>
			<DeclaredIn>swypPendingConnectionQueue.h</DeclaredIn>			
			
			<Declaration>- (void)addInterfaceMethod:(swypConnectionMethod)method</Declaration>
			<Parameters>
				<Parameter>
					<Name>method</Name>
					<Abstract type="html">swypConnectionMethod</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addInterfaceMethod:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypPendingConnectionQueue/connectionSessionArrayForInterfaceMethod:</TokenIdentifier>
			<Abstract type="html">Returns a mutable array for managing connection sessions within a specific connection method</Abstract>
			<DeclaredIn>swypPendingConnectionQueue.h</DeclaredIn>			
			
			<Declaration>- (NSMutableArray *)connectionSessionArrayForInterfaceMethod:(swypConnectionMethod)connectionMethod</Declaration>
			
			<ReturnValue><Abstract type="html">returns mutable array for manipulation at will, or returns nil if either not supported or removed</Abstract></ReturnValue>
			<Anchor>//api/name/connectionSessionArrayForInterfaceMethod:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypPendingConnectionQueue/removeConnectionSessionArrayForInterfaceMethod:</TokenIdentifier>
			<Abstract type="html">Returns a mutable array for managing connection sessions within a specific connection method</Abstract>
			<DeclaredIn>swypPendingConnectionQueue.h</DeclaredIn>			
			
			<Declaration>- (void)removeConnectionSessionArrayForInterfaceMethod:(swypConnectionMethod)connectionMethod</Declaration>
			
			<ReturnValue><Abstract type="html">returns mutable array for manipulation at will</Abstract></ReturnValue>
			<Anchor>//api/name/removeConnectionSessionArrayForInterfaceMethod:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypPendingConnectionQueue/hasPendingConnectionSessions</TokenIdentifier>
			<Abstract type="html">Relates if any connectionSessionArray(s) are not nil</Abstract>
			<DeclaredIn>swypPendingConnectionQueue.h</DeclaredIn>			
			
			<Declaration>- (BOOL)hasPendingConnectionSessions</Declaration>
			
			
			<Anchor>//api/name/hasPendingConnectionSessions</Anchor>
		</Token>
		
	</File>
</Tokens>