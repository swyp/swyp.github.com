<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/swypCloudPairManager.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/swypCloudPairManager</TokenIdentifier>
			<Abstract type="html">swypCloudPairManager is a swypInterfaceManager protocol conforming class that handles the swyp cloud interaction.</Abstract>
			<DeclaredIn>swypCloudPairManager.h</DeclaredIn>
			
			<NodeRef refid="14"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypCloudPairManager/advertiseSwypOutAsCompleted:</TokenIdentifier>
			<Abstract type="html">Continue advertising specifc swypOut, perhaps updating with finalized swyp-info where necessary. Accept connections.</Abstract>
			<DeclaredIn>swypCloudPairManager.m</DeclaredIn>			
			
			<Declaration>- (void)advertiseSwypOutAsCompleted:(swypInfoRef *)ref</Declaration>
			
			
			<Anchor>//api/name/advertiseSwypOutAsCompleted:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypCloudPairManager/stopAdvertisingSwypOut:</TokenIdentifier>
			<Abstract type="html">No longer advertise a swyp out; remove from reference queue. No longer accept a connection for it (if an interface is able to tell this).</Abstract>
			<DeclaredIn>swypCloudPairManager.m</DeclaredIn>			
			
			<Declaration>- (void)stopAdvertisingSwypOut:(swypInfoRef *)ref</Declaration>
			
			
			<Anchor>//api/name/stopAdvertisingSwypOut:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypCloudPairManager/isAdvertisingSwypOut:</TokenIdentifier>
			<Abstract type="html">Tells whether actually being advertised</Abstract>
			<DeclaredIn>swypCloudPairManager.m</DeclaredIn>			
			
			<Declaration>- (BOOL)isAdvertisingSwypOut:(swypInfoRef *)ref</Declaration>
			
			
			<Anchor>//api/name/isAdvertisingSwypOut:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypCloudPairManager/startFindingSwypInServerCandidatesForRef:</TokenIdentifier>
			<Abstract type="html">Start looking for and resolving for any networked candidates. Candidates are returned to swypInterfaceManagerDelegate.</Abstract>
			<DeclaredIn>swypCloudPairManager.m</DeclaredIn>			
			
			<Declaration>- (void)startFindingSwypInServerCandidatesForRef:(swypInfoRef *)ref</Declaration>
			
			
			<Anchor>//api/name/startFindingSwypInServerCandidatesForRef:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypCloudPairManager/stopFindingSwypInServerCandidatesForRef:</TokenIdentifier>
			<Abstract type="html">No longer search for additional swypIn servers for this ref; remove from reference queue.
	
	Do not send further delegate messages with this ref after notifying of the stoppage. </Abstract>
			<DeclaredIn>swypCloudPairManager.m</DeclaredIn>			
			
			<Declaration>- (void)stopFindingSwypInServerCandidatesForRef:(swypInfoRef *)ref</Declaration>
			
			
			<Anchor>//api/name/stopFindingSwypInServerCandidatesForRef:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypCloudPairManager/resumeNetworkActivity</TokenIdentifier>
			<Abstract type="html">Allow network activity to resume on this interface. Ususally app is going foreground, or workspace is opening for first time.</Abstract>
			<DeclaredIn>swypCloudPairManager.m</DeclaredIn>			
			
			<Declaration>- (void)resumeNetworkActivity</Declaration>
			
			
			<Anchor>//api/name/resumeNetworkActivity</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypCloudPairManager/suspendNetworkActivity</TokenIdentifier>
			<Abstract type="html">Pause network activity on this interface. Ususally app is going background.</Abstract>
			<DeclaredIn>swypCloudPairManager.m</DeclaredIn>			
			
			<Declaration>- (void)suspendNetworkActivity</Declaration>
			
			
			<Anchor>//api/name/suspendNetworkActivity</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypCloudPairManager/initWithInterfaceManagerDelegate:</TokenIdentifier>
			<Abstract type="html">Standardized init function for interfaces</Abstract>
			<DeclaredIn>swypCloudPairManager.m</DeclaredIn>			
			
			<Declaration>- (id)initWithInterfaceManagerDelegate:(id&lt;swypInterfaceManagerDelegate&gt;)delegate</Declaration>
			
			
			<Anchor>//api/name/initWithInterfaceManagerDelegate:</Anchor>
		</Token>
		
	</File>
</Tokens>