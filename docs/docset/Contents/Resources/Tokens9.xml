<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/swypBidirectionalMutableDictionary.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/swypBidirectionalMutableDictionary</TokenIdentifier>
			<Abstract type="html">This class simply supports setting object for key, or value for key, then being able to efficiently retrieve the inverse of key for value, etc.</Abstract>
			<DeclaredIn>swypBidirectionalMutableDictionary.h</DeclaredIn>
			
			<NodeRef refid="9"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypBidirectionalMutableDictionary/keyForObject:</TokenIdentifier>
			<Abstract type="html">  This is the core functionality. Returns nil if nothing available.</Abstract>
			<DeclaredIn>swypBidirectionalMutableDictionary.h</DeclaredIn>			
			
			<Declaration>- (id)keyForObject:(id)object</Declaration>
			
			
			<Anchor>//api/name/keyForObject:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypBidirectionalMutableDictionary/keyForValue:</TokenIdentifier>
			<Abstract type="html">  This is the string method. Returns nil if nothing available.</Abstract>
			<DeclaredIn>swypBidirectionalMutableDictionary.h</DeclaredIn>			
			
			<Declaration>- (NSString *)keyForValue:(id)value</Declaration>
			
			
			<Anchor>//api/name/keyForValue:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/swypBidirectionalMutableDictionary/inverseDictionary</TokenIdentifier>
			<Abstract type="html">  Returns dictionary of keysByObject. </Abstract>
			<DeclaredIn>swypBidirectionalMutableDictionary.h</DeclaredIn>			
			
			<Declaration>- (NSDictionary *)inverseDictionary</Declaration>
			
			
			<Anchor>//api/name/inverseDictionary</Anchor>
		</Token>
		
	</File>
</Tokens>