<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/swypConnectionSessionDataDelegate.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/swypConnectionSessionDataDelegate</TokenIdentifier>
			<Abstract type="html">How a swypConnectionSession gives away its received data. See addDataDelegate: of swypConnectionSession.</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>
			
			<NodeRef refid="45"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/swypConnectionSessionDataDelegate/supportedFileTypesForReceipt</TokenIdentifier>
			<Abstract type="html">swypFileTypeStrings in order of preference where 0 = most preferent
	Use this on your datasource set in swypContentInteractionManager to choose what files your app accepts.</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>- (NSArray *)supportedFileTypesForReceipt</Declaration>
			
			
			<Anchor>//api/name/supportedFileTypesForReceipt</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/swypConnectionSessionDataDelegate/delegateWillReceiveDataFromDiscernedStream:ofType:inConnectionSession:</TokenIdentifier>
			<Abstract type="html">A convenience method for delegateWillHandleDiscernedStream:wantsAsData:inConnectionSession:. Return true to accept the enclosed discernedStream as NSData through yieldedData:discernedStream:inConnectionSession: when it's done being received.</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>- (BOOL)delegateWillReceiveDataFromDiscernedStream:(swypDiscernedInputStream *)discernedStream ofType:(NSString *)streamType inConnectionSession:(swypConnectionSession *)session</Declaration>
			<Parameters>
				<Parameter>
					<Name>streamType</Name>
					<Abstract type="html">is a shortcut for discernedStream.streamType

Though there are several data delegates, only one delegate should handle and return TRUE, all else returning false
Delegates should see if they're interested through discerned stream's properities like 'streamType' and 'streamTag'
If no one handles, an exception is thrown</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">true or false depending on interest in stream.</Abstract></ReturnValue>
			<Anchor>//api/name/delegateWillReceiveDataFromDiscernedStream:ofType:inConnectionSession:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/swypConnectionSessionDataDelegate/delegateWillHandleDiscernedStream:wantsAsData:inConnectionSession:</TokenIdentifier>
			<Abstract type="html">See whether delegate will handle data stream.</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>- (BOOL)delegateWillHandleDiscernedStream:(swypDiscernedInputStream *)discernedStream wantsAsData:(BOOL *)wantsProvidedAsNSData inConnectionSession:(swypConnectionSession *)session</Declaration>
			
			
			<Anchor>//api/name/delegateWillHandleDiscernedStream:wantsAsData:inConnectionSession:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/swypConnectionSessionDataDelegate/yieldedData:discernedStream:inConnectionSession:</TokenIdentifier>
			<Abstract type="html">	The following function is called if 'delegateWillHandleDiscernedStream' returns true and sets 'wantsProvidedAsNSData' to true.
	</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>- (void)yieldedData:(NSData *)streamData discernedStream:(swypDiscernedInputStream *)discernedStream inConnectionSession:(swypConnectionSession *)session</Declaration>
			<Parameters>
				<Parameter>
					<Name>discernedStream</Name>
					<Abstract type="html">the stream containing properties like streamType, and streamTag.</Abstract>
				</Parameter><Parameter>
					<Name>streamData</Name>
					<Abstract type="html">Data from the discernedStream.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/yieldedData:discernedStream:inConnectionSession:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/swypConnectionSessionDataDelegate/failedSendingStream:error:connectionSession:</TokenIdentifier>
			<Abstract type="html">Upon failing to send data</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>- (void)failedSendingStream:(NSInputStream *)stream error:(NSError *)error connectionSession:(swypConnectionSession *)session</Declaration>
			
			
			<Anchor>//api/name/failedSendingStream:error:connectionSession:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/swypConnectionSessionDataDelegate/completedSendingStream:connectionSession:</TokenIdentifier>
			<Abstract type="html">Upon happily sending data</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>- (void)completedSendingStream:(NSInputStream *)stream connectionSession:(swypConnectionSession *)session</Declaration>
			
			
			<Anchor>//api/name/completedSendingStream:connectionSession:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/swypConnectionSessionDataDelegate/didBeginReceivingDataInConnectionSession:</TokenIdentifier>
			<Abstract type="html">	Will notify you when the data IN stream is receiving so that UI can be updated accordingly</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>- (void)didBeginReceivingDataInConnectionSession:(swypConnectionSession *)session</Declaration>
			
			
			<Anchor>//api/name/didBeginReceivingDataInConnectionSession:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/swypConnectionSessionDataDelegate/didFinnishReceivingDataInConnectionSession:</TokenIdentifier>
			<Abstract type="html">	Will notify you when the data IN stream is DONE receiving so that UI can be updated accordingly</Abstract>
			<DeclaredIn>swypConnectionSession.h</DeclaredIn>			
			
			<Declaration>- (void)didFinnishReceivingDataInConnectionSession:(swypConnectionSession *)session</Declaration>
			
			
			<Anchor>//api/name/didFinnishReceivingDataInConnectionSession:</Anchor>
		</Token>
		
	</File>
</Tokens>